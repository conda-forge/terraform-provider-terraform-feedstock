{% set provider = "Terraform" %}
{% set goname = "github.com/terraform-providers/terraform-provider-"+provider.lower() %}
{% set version = "1.0.2" %}

{% set name = goname.split('/')[-1] %}
{% set pkg_src = ('src/'+goname).replace("/",os.sep) %}

{% set x4_plugin = name + '_v' + version + "_x4" + (".exe" if win else "")%}

{% set sha256 = "390fac0c73584a99b4a360864eb1c6f32373183c9e2f2cd5ed4b40682a4efedc" %}
{% set sha256_win64 = "7c54bdbb0b86c9c5476614a7978021a7c54ad36c5ff71c41f18b0a788dff709b" %}

package:
  name: {{ name|lower }}
  version: {{ version }}

source:
  - folder:  {{ pkg_src }}
    url: https://{{ goname }}/archive/v{{ version }}.tar.gz
    sha256: {{ sha256 }}


build:
  number: 1002
  script:
    - pushd {{ pkg_src }}
    - go build -v -o $GOBIN/{{ x4_plugin }} .  # [unix]
    - go build -v -o %GOBIN%{{ x4_plugin }} .  # [win]

requirements:
  build:
    - {{ compiler('go') }} >=1.11.3
  run:
    - terraform >=0.10  # [unix]
    - terraform >=0.11.11 # [win]

test:
  commands:
    - bash -euf -c "echo 'provider "{{ provider|lower }}" { version="{{ version }}" }' > init.tf"
    - terraform init
    # Tests that no plugins were downloaded
    - test -f .terraform/plugins/{{ goos }}_{{ goarch }}/lock.json
    - test ! -f .terraform/plugins/{{ goos }}_{{ goarch }}/{{ x4_plugin }}

about:
  home: https://www.terraform.io
  license: MPL 2.0
  summary: The Terraform {{ provider }} provider
  doc_url: https://www.terraform.io/docs/providers/{{ provider|lower }}/index.html
  dev_url: https://github.com/terraform-providers/{{ name }}

extra:
  recipe-maintainers:
    - sodre
